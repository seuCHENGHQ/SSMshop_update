<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Redis连接池配置 -->
	<bean id="jedisPoolConfig"
		class="redis.clients.jedis.JedisPoolConfig">
		<!-- 控制一个连接池中最多能有多少个连接 -->
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<!-- 连接池中最多能有maxIdle个空闲连接，这里取值为20，表明即使没有数据库连接时依然可以保持20个空闲的连接，而不被清除，保持在待命状态 -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!-- 连接的最大等待时间，如果超过maxWaitMillis毫秒仍未获得与Redis服务器的连接，就抛出异常 -->
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<!-- 在获取连接时，检查连接的有效性 -->
		<property name="testOnBorrow"
			value="${redis.pool.testOnBorrow}" />
	</bean>

	<!-- 创建Jedis连接池，并进行相应的配置 -->
	<!-- spring允许用户通过depends-on属性指定bean前置依赖的bean,前置依赖的bean会在本bean实例化之前创建好 -->
	<bean id="jedisWritePool"
		class="com.chq.ssmshop.cache.JedisPoolWriper"
		depends-on="jedisPoolConfig">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.hostname}" />
		<constructor-arg index="2" value="${redis.port}" />
	</bean>

	<!-- 创建Redis工具类，封装好Redis的连接以进行相关的操作 -->
	<bean id="jedisUtil" class="com.chq.ssmshop.cache.JedisUtil"
		scope="singleton">
		<property name="jedisPool">
			<!-- ref表明将Spring IoC容器中id=xxx的bean赋值给name=xxx的成员变量 -->
			<ref bean="jedisWritePool" />
		</property>
	</bean>

	<bean id="jedisKeys" class="com.chq.ssmshop.cache.JedisUtil$Keys"
		scope="singleton">
		<constructor-arg ref="jedisUtil"></constructor-arg>
	</bean>

	<bean id="jedisStrings" class="com.chq.ssmshop.cache.JedisUtil$Strings"
		scope="singleton">
		<constructor-arg ref="jedisUtil"></constructor-arg>
	</bean>
</beans>